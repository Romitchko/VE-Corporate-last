security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    role_hierarchy:
        ROLE_ADMIN: [ROLE_ADMIN]
        ROLE_USER: [ROLE_USER]

    providers:
        from_database:
            entity:    
                class: App\Entity\User
                property: username
                

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            # anonymous: lazy
            # provider: users_in_memory
            # http_basic: true

            logout:
                path: /logout  # définition du logout chemin
                target: /

            form_login: 
                check_path: login # check login permet Symfony detection 
                # si user va sur /login en POST c'est qu'il veut s'authentifier grace au formulaire

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN } # contrôle de l'accès du chemin admin, requiere ROLE_ADMIN
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/registration, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }

    encoders:
        App\Entity\User:
            algorithm: bcrypt   # encode le password avec bcrypt
            cost: 12            # valeur de l'encodage 12
